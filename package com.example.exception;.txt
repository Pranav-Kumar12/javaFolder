package com.example.exception;

public class CustomException extends RuntimeException {
    public CustomException(String message) {
        super(message);
    }

    public CustomException(String message, Throwable cause) {
        super(message, cause);
    }
}

package com.example.exception;

public class NotFoundException extends CustomException {
    public NotFoundException(String message) {
        super(message);
    }
}

package com.example.exception;

public class BadRequestException extends CustomException {
    public BadRequestException(String message) {
        super(message);
    }
}

------------------------

 private void loadItems() {
        try (BufferedReader reader = new BufferedReader(new FileReader(FILE_PATH))) {
            String line;
            while ((line = reader.readLine()) != null) {
                String[] parts = line.split(",");
                if (parts.length == 2) {
                    items.put(parts[0], new Item(parts[0], parts[1]));
                }
            }
        } catch (IOException e) {
            throw new RuntimeException("Failed to load items from file", e);
        }
    }

    private void saveItems() {
        try (BufferedWriter writer = new BufferedWriter(new FileWriter(FILE_PATH))) {
            for (Item item : items.values()) {
                writer.write(item.getId() + "," + item.getName());
                writer.newLine();
            }
        } catch (IOException e) {
            throw new RuntimeException("Failed to save items to file", e);
        }
    }